'This library helps with the use of the 2001 Call wrapper, Quality Reject/Disposition (JB0027). To use it, simply fill out the 2001 datatable with the data for a single call to the call wrapper for each row.
'Then call either 2001Sync or 2001Async to have the call wrapper run on each row.
'The datatable is structed as follows:
'Column		=	Parameter		=	Possible Values
'================================================================================================================
'CompCode	=	Company Code	=	CCC - Defaults to current company code
'QualityNum	=	Quality Number	=	#######
'================================================================================================================
Program.Sub.Preflight.Start
V.Global.s2001Error.Declare(String)
F.Data.DataTable.Create("2001",True)
F.Data.DataTable.AddColumn("2001","CompCode","String",V.Caller.CompanyCode)
F.Data.DataTable.AddColumn("2001","QualityNum","String")
Program.Sub.Preflight.End

Program.Sub.2001.Start
F.Intrinsic.Control.Try
	V.Local.sParams.Declare(String)
	V.Local.iCount.Declare(Long,-1)
	
	'For each row in the datatable: concat needed parameters then call the callwrapper according to how the programmer called
	F.Intrinsic.Control.For(V.Local.iCount,0,V.DataTable.2001.RowCount--,1)
		F.Intrinsic.String.ConcatCallWrapperArgs(V.DataTable.2001(V.Local.iCount).CompCode!FieldVal,V.DataTable.2001(V.Local.iCount).QualityNum!FieldVal,V.Local.sParams)
		
		F.Intrinsic.Control.SelectCase(V.Args.CallWrapperType)
			F.Intrinsic.Control.Case(0)
				F.Global.General.CallWrapperSync(2001,V.Local.sParams)
			F.Intrinsic.Control.Case(1)
				F.Global.General.CallWrapperAsync(2001,V.Local.sParams)
		F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.Next(V.Local.iCount)
	
	F.Data.DataTable.DeleteRow("2001")
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(CatchError2001,"Sub",V.Ambient.CurrentSubroutine,"ErrNo",V.Ambient.ErrorNumber,"ErrDesc",V.Ambient.ErrorDescription,"Row",V.Local.iCount)
F.Intrinsic.Control.EndTry
Program.Sub.2001.End

'Calls 2001 with callwrapper type of 0
Program.Sub.2001Sync.Start
F.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(2001,"CallWrapperType",0)
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(CatchError2001,"Sub",V.Ambient.CurrentSubroutine,"ErrNo",V.Ambient.ErrorNumber,"ErrDesc",V.Ambient.ErrorDescription,"Row",-2)
F.Intrinsic.Control.EndTry
Program.Sub.2001Sync.End

'Calls 2001 with callwrapper type of 1
Program.Sub.2001Async.Start
F.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(2001,"CallWrapperType",1)
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(CatchError2001,"Sub",V.Ambient.CurrentSubroutine,"ErrNo",V.Ambient.ErrorNumber,"ErrDesc",V.Ambient.ErrorDescription,"Row",-2)
F.Intrinsic.Control.EndTry
Program.Sub.2001Async.End

Program.Sub.CatchError2001.Start
V.Local.iActualRow.Declare(Long)
F.Intrinsic.Math.Add(V.Args.Row,1,V.Local.iActualRow)
F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}", V.Args.Sub, V.Args.ErrNo, V.Args.ErrDesc,V.Local.iActualRow, V.Global.s2001Error)
Program.Sub.CatchError2001.End