'This library helps with the use of the 200000 Call wrapper, Sales Orders (ORD200). To use it, simply fill out the 200000 datatable with the data for a single call to the call wrapper for each row.
'Then call either 200000Sync or 200000Async to have the call wrapper run on each row.
'The datatable is structed as follows:
'Column		=	Parameter		=	Possible Values
'================================================================================================================
'OrdNum		=	Order Number	=	#######
'Mode		=	Mode			=	"V" - View
'								=	"O" - Open
'								=	"N" - New
'								=	"C" - Copy
'								=	"D" - Delete
'CustNum	=	Customer Number	=	######
'================================================================================================================
Program.Sub.Preflight.Start
V.Global.s200000Error.Declare(String)
F.Data.DataTable.Create("200000",True)
F.Data.DataTable.AddColumn("200000","OrdNum","String")
F.Data.DataTable.AddColumn("200000","Mode","String")
F.Data.DataTable.AddColumn("200000","CustNum","String")
Program.Sub.Preflight.End

Program.Sub.200000.Start
F.Intrinsic.Control.Try
	V.Local.sParams.Declare(String)
	V.Local.iCount.Declare(Long,-1)
	
	'For each row in the datatable: concat needed parameters then call the callwrapper according to how the programmer called
	F.Intrinsic.Control.For(V.Local.iCount,0,V.DataTable.200000.RowCount--,1)
		F.Intrinsic.String.ConcatCallWrapperArgs(V.DataTable.200000(V.Local.iCount).OrdNum!FieldVal,V.DataTable.200000(V.Local.iCount).Mode!FieldVal,V.DataTable.200000(V.Local.iCount).CustNum!FieldVal,V.Local.sParams)
		
		F.Intrinsic.Control.SelectCase(V.Args.CallWrapperType)
			F.Intrinsic.Control.Case(0)
				F.Global.General.CallWrapperSync(200000,V.Local.sParams)
			F.Intrinsic.Control.Case(1)
				F.Global.General.CallWrapperAsync(200000,V.Local.sParams)
		F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.Next(V.Local.iCount)
	
	F.Data.DataTable.DeleteRow("200000")
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(CatchError200000,"Sub",V.Ambient.CurrentSubroutine,"ErrNo",V.Ambient.ErrorNumber,"ErrDesc",V.Ambient.ErrorDescription,"Row",V.Local.iCount)
F.Intrinsic.Control.EndTry
Program.Sub.200000.End

'Calls 200000 with callwrapper type of 0. Passes existance of Test argument if it is provided.
Program.Sub.200000Sync.Start
F.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(200000,"CallWrapperType",0)
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(CatchError200000, "Sub", V.Ambient.CurrentSubroutine, "ErrNo", V.Ambient.ErrorNumber, "ErrDesc", V.Ambient.ErrorDescription,"Row",-2)
F.Intrinsic.Control.EndTry
Program.Sub.200000Sync.End

'Calls 200000 with callwrapper type of 1. Passes existance of Test argument if it is provided.
Program.Sub.200000Async.Start
F.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(200000,"CallWrapperType",1)
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(CatchError200000, "Sub", V.Ambient.CurrentSubroutine, "ErrNo", V.Ambient.ErrorNumber, "ErrDesc", V.Ambient.ErrorDescription,"Row",-2)
F.Intrinsic.Control.EndTry
Program.Sub.200000Async.End

Program.Sub.CatchError200000.Start
V.Local.iActualRow.Declare(Long)
F.Intrinsic.Math.Add(V.Args.Row,1,V.Local.iActualRow)
F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}", V.Args.Sub, V.Args.ErrNo, V.Args.ErrDesc,V.Local.iActualRow, V.Global.s200000Error)
Program.Sub.CatchError200000.End